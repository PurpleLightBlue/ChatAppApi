// <auto-generated />
using System;
using ChatApp.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240916012735_TweakChatRoom")]
    partial class TweakChatRoom
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("ChatApp.Domain.Aggregates.ChatRoom", b =>
                {
                    b.Property<string>("RoomName")
                        .HasColumnType("TEXT");

                    b.HasKey("RoomName");

                    b.ToTable("ChatRooms");
                });

            modelBuilder.Entity("ChatApp.Domain.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChatRoomName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChatRoomRoomName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatRoomName");

                    b.HasIndex("ChatRoomRoomName");

                    b.HasIndex("SenderName");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChatApp.Domain.Entities.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChatRoomUser", b =>
                {
                    b.Property<string>("ChatRoomRoomName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MembersUsername")
                        .HasColumnType("TEXT");

                    b.HasKey("ChatRoomRoomName", "MembersUsername");

                    b.HasIndex("MembersUsername");

                    b.ToTable("ChatRoomUser");
                });

            modelBuilder.Entity("ChatApp.Domain.Entities.Message", b =>
                {
                    b.HasOne("ChatApp.Domain.Aggregates.ChatRoom", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatRoomName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ChatApp.Domain.Aggregates.ChatRoom", "ChatRoom")
                        .WithMany()
                        .HasForeignKey("ChatRoomRoomName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatApp.Domain.Entities.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChatRoom");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("ChatRoomUser", b =>
                {
                    b.HasOne("ChatApp.Domain.Aggregates.ChatRoom", null)
                        .WithMany()
                        .HasForeignKey("ChatRoomRoomName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatApp.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("MembersUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChatApp.Domain.Aggregates.ChatRoom", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
